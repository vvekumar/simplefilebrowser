MAJOR?=0
MINOR?=1

VERSION=$(MAJOR).$(MINOR)

APP_NAME="sfb"

# Our docker Hub account name
HUB_NAMESPACE = "vaivek" # [OPTIONAL] If pushing to hub

# location of Dockerfiles
DOCKER_FILE_DIR = "deployments/sfb"
DOCKERFILE = "${DOCKER_FILE_DIR}/Dockerfile"

IMAGE_NAME = "${APP_NAME}"
CUR_DIR = $(shell echo "${PWD}")

# For python format checker. Default is 78
PEP8_MAX_LINE_LENGTH = 99

# unit testing options
PYTEST_OPTS = --verbosity=2 --include='.*_test.py' --detailed-errors --where=toolbox # To be updated
COVERAGE_OPTS = --with-coverage --cover-package=toolbox --cover-html --cover-inclusive --cover-tests --cover-erase \
--cover-html-dir=../test-results/unit-test-code-coverage

#################################
# Install targets
#################################
.PHONY: install-dev
install-dev:
 @echo "+ $@"
 @pip install -e .

.PHONY: pip-freeze
 @echo "+ $@"
 @pip freeze | grep -v system_toolbox > pip-requirements/requirements.txt

#################################
# Docker targets
#################################
.PHONY: clean-image
clean-image: version-check
 @echo "+ $@"
 @docker rmi ${HUB_NAMESPACE}/${IMAGE_NAME}:latest  || true
 @docker rmi ${HUB_NAMESPACE}/${IMAGE_NAME}:${VERSION}  || true

.PHONY: image
image: version-check
 @echo "+ $@"
 @docker build -t ${HUB_NAMESPACE}/${IMAGE_NAME}:${VERSION} -f ./${DOCKERFILE} .
 @docker tag ${HUB_NAMESPACE}/${IMAGE_NAME}:${VERSION} ${HUB_NAMESPACE}/${IMAGE_NAME}:latest
 @echo 'Done.'
 @docker images --format '{{.Repository}}:{{.Tag}}\t\t Built: {{.CreatedSince}}\t\tSize: {{.Size}}' | \
 grep ${IMAGE_NAME}:${VERSION}

# [OPTIONAL] - ONLY IF HUB_NAMESPACE IS NOT NULL
ifdef HUB_NAMESPACE
.PHONY: push
push: clean-image image
 @echo "+ $@"
 @docker push ${HUB_NAMESPACE}/${IMAGE_NAME}:${VERSION}
 @docker push ${HUB_NAMESPACE}/${IMAGE_NAME}:latest

#################################
# Test targets (pytest: )
#################################
.PHONY: test-unit
test-unit:
 @echo "+ $@"
 py.test ${PYTEST_OPTS}

.PHONY: test-container
test-container: image
 @echo "+ $@"
 @docker run --rm --name toolbox-unit-tests ${HUB_NAMESPACE}/${IMAGE_NAME}:latest make test-all
 @docker run --rm --name toolbox-int --volume ${CUR_DIR}/results:/root/logs -e REGISTRY_USERNAME=foo -e REGISTRY_PASSWORD=bar \
    ${HUB_NAMESPACE}/${IMAGE_NAME}:latest python ./integration-tests/testbed_validation.py

# Utilities